AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: |
  cardoc-service
  Sample SAM Template for cardoc-service

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 180
    CodeUri: src/
    Architectures:
      - x86_64

Resources:
  VehiclesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: Vehicles
      AttributeDefinitions:
        - AttributeName: vehicleName
          AttributeType: S
      KeySchema:
        - AttributeName: vehicleName
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

  VehiclesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: Vehicles
      AccessControl: Private

  VehiclesApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Cors:
        AllowMethods: "'GET,PUT,POST,DELETE'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  VehiclesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: vehicles.handler
      Policies:
        - VPCAccessPolicy: {}
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:GetItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
                - dynamodb:Scan
              Resource: !GetAtt VehiclesTable.Arn
            - Effect: Allow
              Action:
                - s3:PutObject
                - s3:GetObject
                - s3:DeleteObject
<<<<<<< HEAD
              Resource: !Sub arn:aws:s3:::Vehicles/*
=======
              Resource: !Sub "arn:aws:s3:::vehicles/*"
>>>>>>> 44aab2f (:sparkles: Add Vehicle bucket)
      Events:
        GetVehicles:
          Type: Api
          Properties:
            RestApiId: !Ref VehiclesApi
            Path: /vehicles
            Method: get
        PostVehicles:
          Type: Api
          Properties:
            RestApiId: !Ref VehiclesApi
            Path: /vehicles
            Method: post
        PutVehicles:
          Type: Api
          Properties:
            RestApiId: !Ref VehiclesApi
            Path: /vehicles
            Method: put
        DeleteVehicles:
          Type: Api
          Properties:
            RestApiId: !Ref VehiclesApi
            Path: /vehicles
            Method: delete
        VehiclesBucket:
          Type: S3
          Properties:
            Bucket: !Ref VehiclesBucket
            Events:
              - s3:ObjectCreated:*
              - s3:ObjectRemoved:*
        VehiclesTable:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt VehiclesTable.StreamArn
            StartingPosition: TRIM_HORIZON
            BatchSize: 1

    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
<<<<<<< HEAD
        Target: es2020
=======
        Target: "es2020"
>>>>>>> 44aab2f (:sparkles: Add Vehicle bucket)
        Sourcemap: true
        EntryPoints:
          - vehicles.ts

Outputs:
  VehiclesApi:
<<<<<<< HEAD
    Description: API Gateway endpoint URL for Prod stage for VehiclesApi function
    Value: !Sub https://${VehiclesApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  VehiclesFunction:
    Description: VehiclesFunction Lambda Function ARN
    Value: !GetAtt VehiclesFunction.Arn
  VehiclesFunctionIamRole:
    Description: IAM Role created for VehiclesFunction function
    Value: !GetAtt VehiclesFunction.Arn
  VehiclesBucket:
    Description: S3 Bucket for storing vehicle images and documents
    Value: !Ref VehiclesBucket
=======
    Description: "API Gateway endpoint URL for Prod stage for VehiclesApi function"
    Value: !Sub "https://${VehiclesApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  VehiclesFunction:
    Description: "VehiclesFunction Lambda Function ARN"
    Value: !GetAtt VehiclesFunction.Arn
  VehiclesFunctionIamRole:
    Description: "IAM Role created for VehiclesFunction function"
    Value: !GetAtt VehiclesFunction.Arn
  Vehicles:
    Description: "S3 Bucket for storing vehicle images and documents"
    Value: !Ref Vehicles
>>>>>>> 44aab2f (:sparkles: Add Vehicle bucket)
